{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","services/contacts-api.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Container/Container.js","redux/phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","BASE_URL","fetchContacts","a","axios","get","data","postContact","name","number","post","id","shortid","fetchDeleteContact","delete","createAsyncThunk","_","rejectWithValue","contactsApi","contacts","message","response","filterContacts","createAction","contactsReducer","createReducer","fulfilled","payload","state","filter","contact","filterReducer","isLoadingReducer","pending","rejected","errorReducer","combineReducers","isLoading","error","store","configureStore","reducer","phonebookReducer","Container","children","className","s","container","protoType","PropTypes","node","isRequired","getContacts","getFilter","getVisibileContacts","normalizedContacts","toLocaleLowerCase","includes","ContactForm","useSelector","contactsSelectors","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","target","value","reset","onSubmit","preventDefault","find","toast","success","contactsOperations","formTitle","formText","formInput","type","pattern","title","required","onChange","formBtn","Filter","filterWrapp","filterTitle","filterText","filterInput","ContactList","useEffect","color","height","width","contactsList","map","contactsItem","contactsBtn","onClick","style","border","padding","iconTheme","primary","secondary","onDeleteContact","App","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71d4089f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formTitle\":\"ContactForm_formTitle__34BeK\",\"formText\":\"ContactForm_formText__3Cvsq\",\"formInput\":\"ContactForm_formInput__1T9zw\",\"formBtn\":\"ContactForm_formBtn__aZZH3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapp\":\"Filter_filterWrapp__1gRPI\",\"filterTitle\":\"Filter_filterTitle__TSu6M\",\"filterText\":\"Filter_filterText__8KrOu\",\"filterInput\":\"Filter_filterInput__3B-4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__20mtY\",\"contactsItem\":\"ContactList_contactsItem__4J1wS\",\"contactsBtn\":\"ContactList_contactsBtn__3HvQE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3UzP-\"};","import shortid from 'shortid';\r\nimport axios from 'axios';\r\nconst BASE_URL = 'http://localhost:3004/contacts';\r\n\r\nasync function fetchContacts() {\r\n  const { data } = await axios.get(`${BASE_URL}`);\r\n  return data;\r\n}\r\n\r\nasync function postContact(name, number) {\r\n  const { data } = await axios.post(`${BASE_URL}`, {\r\n    id: shortid(),\r\n    name,\r\n    number,\r\n  });\r\n  return data;\r\n}\r\n\r\nasync function fetchDeleteContact(id) {\r\n  await axios.delete(`${BASE_URL}/${id}`);\r\n  return id;\r\n}\r\n\r\nexport { fetchContacts, postContact, fetchDeleteContact };\r\n\r\n// Через FETCH\r\n\r\n// async function fetchContacts() {\r\n//   const data = await fetch(`${BASE_URL}`)\r\n//     .then(response => response.json())\r\n//     .then(contacts => contacts);\r\n\r\n//   return data;\r\n// }\r\n\r\n// async function postContact(name, number) {\r\n//   const contact = {\r\n//     id: shortid(),\r\n//     name,\r\n//     number,\r\n//   };\r\n//   const data = await fetch(`${BASE_URL}`, {\r\n//     method: 'POST',\r\n//     body: JSON.stringify(contact),\r\n//     headers: {\r\n//       'Content-Type': 'application/json;charset=utf-8',\r\n//     },\r\n//   })\r\n//     .then(response => response.json())\r\n//     .then(data => data);\r\n//   return data;\r\n// }\r\n\r\n//  fetchDeleteContact ===> НЕ ПРАВИЛЬНО РАБОТАЕТ\r\n\r\n// async function fetchDeleteContact(id) {\r\n//   const contactId = await fetch(`${BASE_URL}/${id}`, {\r\n//     method: 'DELETE',\r\n//   })\r\n//     .then(response => response.json())\r\n//     .then(contactId => contactId);\r\n\r\n//   return contactId;\r\n// }\r\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit';\r\nimport * as contactsApi from 'services/contacts-api';\r\n// import * as contactActions from './phonebook-actions';\r\n\r\nconst fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await contactsApi.fetchContacts();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst postContact = createAsyncThunk(\r\n  'contacts/postContact',\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await contactsApi.postContact(name, number);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst fetchDeleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await contactsApi.fetchDeleteContact(id);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst filterContacts = createAction('contacts/filterContacts');\r\n\r\nexport { fetchContacts, postContact, fetchDeleteContact, filterContacts };\r\n\r\n// const addContact = createAction(\r\n//   'contactsList/addContact',\r\n//   ({ name, number }) => ({\r\n//     payload: {\r\n//       id: shortid.generate(),\r\n//       name: name,\r\n//       number: number,\r\n//     },\r\n//   }),\r\n// );\r\n\r\n// const fetchContacts = () => async dispatch => {\r\n//   dispatch(contactActions.fetchContactsRequest());\r\n\r\n//   try {\r\n//     const contacts = await contactsApi.fetchContacts();\r\n//     dispatch(contactActions.fetchContactsSuccess(contacts));\r\n//   } catch (error) {\r\n//     dispatch(contactActions.fetchContactsError(error));\r\n//   }\r\n// };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContacts,\r\n  postContact,\r\n  fetchDeleteContact,\r\n  filterContacts,\r\n} from './phonebook-operations';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [postContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [fetchDeleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoadingReducer = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n\r\n  [postContact.pending]: () => true,\r\n  [postContact.fulfilled]: () => false,\r\n  [postContact.rejected]: () => false,\r\n\r\n  [fetchDeleteContact.pending]: () => true,\r\n  [fetchDeleteContact.fulfilled]: () => false,\r\n  [fetchDeleteContact.rejected]: () => false,\r\n});\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, { payload }) => payload,\r\n  [fetchContacts.pending]: () => null,\r\n  [postContact.rejected]: (_, { payload }) => payload,\r\n  [postContact.pending]: () => null,\r\n  [fetchContacts.rejected]: (_, { payload }) => payload,\r\n  [fetchContacts.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  isLoading: isLoadingReducer,\r\n  error: errorReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: phonebookReducer,\r\n  // работает только в режиме разбработки\r\n  // devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.protoType = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","const getContacts = state => state.contacts;\r\nconst getFilter = state => state.filter;\r\nconst isLoading = state => state.isLoading;\r\n\r\nconst getVisibileContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedContacts = filter.toLocaleLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLocaleLowerCase().includes(normalizedContacts),\r\n  );\r\n};\r\n\r\nexport { getContacts, getFilter, getVisibileContacts, isLoading };\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsSelectors, contactsOperations } from 'redux/phonebook';\r\nimport { toast } from 'react-hot-toast';\r\n// import {\r\n//   NotificationContainer,\r\n//   NotificationManager,\r\n// } from 'react-notifications';\r\n// import { addContact } from '../redux/phonebook-actions';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { value, name } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      contacts.find(\r\n        contact =>\r\n          contact.name.toLocaleLowerCase() === name.toLocaleLowerCase(),\r\n      )\r\n    ) {\r\n      return toast.error(`Contact ${name} is already in contacts `);\r\n      // return NotificationManager.warning(\r\n      //   `Name ${name} is already in contacts `,\r\n      //   'Warning',\r\n      //   3000,\r\n      // );\r\n    } else if (contacts.find(contact => contact.number === number)) {\r\n      return toast.error(`Number ${number} is already in contacts `);\r\n      // return NotificationManager.warning(\r\n      //   `Number ${number} is already in contacts `,\r\n      //   'Warning',\r\n      //   3000,\r\n      // );\r\n    }\r\n\r\n    // NotificationManager.success(\r\n    //   `Contact ${name} added successfully `,\r\n    //   'Success',\r\n    //   2000,\r\n    // );\r\n    toast.success(`Contact ${name} added successfully `);\r\n    dispatch(contactsOperations.postContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h1 className={s.formTitle}>Phonebook</h1>\r\n      <label>\r\n        <p className={s.formText}>Name:</p>\r\n        <input\r\n          className={s.formInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          value={name}\r\n        />\r\n      </label>\r\n      <label>\r\n        <p className={s.formText}>Number:</p>\r\n        <input\r\n          className={s.formInput}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          value={number}\r\n        />\r\n      </label>\r\n      <button className={s.formBtn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n      {/* <NotificationContainer /> */}\r\n    </form>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsOperations } from 'redux/phonebook';\r\nimport { contactsSelectors } from 'redux/phonebook';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={s.filterWrapp}>\r\n      <h2 className={s.filterTitle}>Contacts</h2>\r\n      <label>\r\n        <p className={s.filterText}>Find Contacts By Name</p>\r\n        <input\r\n          className={s.filterInput}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e =>\r\n            dispatch(contactsOperations.filterContacts(e.target.value))\r\n          }\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from 'redux/phonebook';\r\nimport Loader from 'react-loader-spinner';\r\nimport { toast } from 'react-hot-toast';\r\n\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(contactsSelectors.getVisibileContacts);\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(contactsSelectors.isLoading);\r\n\r\n  const onDeleteContact = id => {\r\n    toast.success('Successfully deleted', {\r\n      style: {\r\n        border: '1px solid #713200',\r\n        padding: '16px',\r\n        color: 'brown',\r\n      },\r\n      iconTheme: {\r\n        primary: 'brown',\r\n        secondary: '#FFFAEE',\r\n      },\r\n    });\r\n\r\n    dispatch(contactsOperations.fetchDeleteContact(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && (\r\n        <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n      )}\r\n      <ul className={s.contactsList}>\r\n        {contacts &&\r\n          !isLoading &&\r\n          contacts.map(({ id, name, number }) => (\r\n            <li className={s.contactsItem} key={id}>\r\n              {name}: {number}\r\n              <button\r\n                className={s.contactsBtn}\r\n                onClick={() => onDeleteContact(id)}\r\n                type=\"button\"\r\n              >\r\n                X\r\n              </button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n};\r\n","import Container from './components/Container';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\nimport { Toaster } from 'react-hot-toast';\r\n\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <ContactForm />\r\n      <Filter />\r\n      <ContactList />\r\n      <Toaster position=\"top-center\" />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport store from './redux/store';\r\n// import { NotificationContainer } from 'react-notifications';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <NotificationContainer> */}\r\n      <App />\r\n      {/* </NotificationContainer> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}